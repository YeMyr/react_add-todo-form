{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","Helpers/getUser.ts","api/users.ts","api/todos.ts","App.tsx","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","completed","cn","TodoList","todos","map","getUser","userId","users","find","username","App","useState","todosFromServer","listOfTodos","setListOfTodos","newTodoTitle","setnewTodoTitle","selectedUser","setSelectedUser","noTitle","setNoTitle","noUserSelected","setNoUserSelected","usersFromServer","action","method","onSubmit","event","preventDefault","type","placeholder","value","onChange","currentTarget","target","disabled","onClick","length","findUser","findMaxId","Math","max","current","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16065ace.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../Types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../Types/Todo';\n// import { UserInfo } from '../UserInfo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', { 'TodoInfo--completed': completed === true })}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../Types/Todo';\n// import { TodoInfo } from '../TodoInfo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import { User } from '../Types/User';\n\nexport function getUser(userId: number, users: User[]): User | null {\n  const foundUser = users.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React, { useState } from 'react';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { Todo } from './Types/Todo';\nimport './App.scss';\n\nimport { getUser } from './Helpers/getUser';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { User } from './Types/User';\n\nexport const App: React.FC = () => {\n  const [listOfTodos, setListOfTodos] = useState<Todo[]>(todosFromServer);\n  const [newTodoTitle, setnewTodoTitle] = useState<string>('');\n  const [selectedUser, setSelectedUser] = useState<number | string>(0);\n  const [noTitle, setNoTitle] = useState<boolean>(false);\n  const [noUserSelected, setNoUserSelected] = useState<boolean>(false);\n\n  const todos: Todo[] = listOfTodos.map(todo => ({\n    ...todo,\n    user: getUser(todo.userId, usersFromServer),\n  }));\n\n  const addTodo = () => {\n    if (newTodoTitle.length === 0 && selectedUser === 0) {\n      setNoTitle(true);\n      setNoUserSelected(true);\n\n      return;\n    }\n\n    if (newTodoTitle.length === 0) {\n      setNoTitle(true);\n\n      return;\n    }\n\n    if (selectedUser === 0) {\n      setNoUserSelected(true);\n\n      return;\n    }\n\n    const findUser = usersFromServer.find(user => user.id === +selectedUser);\n\n    const findMaxId = Math.max(...listOfTodos.map(todo => todo.id));\n\n    if (findUser) {\n      setListOfTodos((current => {\n        return [\n          ...current,\n          {\n            id: findMaxId + 1,\n            userId: findUser.id,\n            title: newTodoTitle,\n            completed: false,\n            user: findUser,\n          },\n        ];\n      }));\n    }\n\n    setnewTodoTitle('');\n    setSelectedUser(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(event) => {\n          event.preventDefault();\n        }}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            placeholder=\"Enter a title\"\n            data-cy=\"titleInput\"\n            value={newTodoTitle}\n            name=\"todoTitle\"\n            onChange={(event) => {\n              setnewTodoTitle(event.currentTarget.value);\n              setNoTitle(false);\n            }}\n          />\n          {noTitle && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            name=\"userSelect\"\n            onChange={(event) => {\n              setSelectedUser(event.target.value);\n              setNoUserSelected(false);\n            }}\n            data-cy=\"userSelect\"\n            value={selectedUser}\n          >\n            <option\n              value={0}\n              disabled\n            >\n              Choose a user\n            </option>\n            {usersFromServer.map((user: User) => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n          {noUserSelected\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={addTodo}\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}